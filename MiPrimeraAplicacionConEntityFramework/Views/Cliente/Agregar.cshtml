@using MiPrimeraAplicacionConEntityFramework.Models
@model ClienteCLS
@{
    ViewBag.Title = "Agregar";
    List<SelectListItem> listaSexo = (List<SelectListItem>)ViewBag.lista;

}

<h2>Agregar Cliente</h2>
<div class="row card p-3">

    @using (Html.BeginForm("Agregar", "Cliente", FormMethod.Post, new { @id= "formAddClient" }))
    {
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(p => p.nombre)*
                @Html.TextBoxFor(p => p.nombre, new { @class = "form-control" })
                @Html.ValidationMessage("nombre", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(p => p.appaterno)*
                @Html.TextBoxFor(p => p.appaterno, new { @class = "form-control" })
                @Html.ValidationMessage("appaterno", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(p => p.apmaterno)*
                @Html.TextBoxFor(p => p.apmaterno, new { @class = "form-control" })
                @Html.ValidationMessage("apmaterno", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(p => p.email)*
                @Html.TextBoxFor(p => p.email, new { @class = "form-control" })
                @Html.ValidationMessage("email", new { @class = "text-danger" })

            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(p => p.direccion)*
                @Html.EditorFor(p => p.direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("direccion", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(p => p.telefonofijo)*
                @Html.TextBoxFor(p => p.telefonofijo, new { @class = "form-control" })
                @Html.ValidationMessage("telefonofijo", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(p => p.iidsexo)*
                @Html.DropDownList("iidsexo", listaSexo, null, new { @class = "form-control" })
                @Html.ValidationMessage("iidsexo", new { @class = "text-danger" })

            </div>
            <div class="col-md-4">
                @Html.LabelFor(p => p.telefonocelular)*
                @Html.TextBoxFor(p => p.telefonocelular, new { @class = "form-control" })
                @Html.ValidationMessage("telefonocelular", new { @class = "text-danger" })

            </div>
        </div>
        <br />
        <div>
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Guardar
            </button>

        </div>
    }

</div>


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Desea guardar los cambios?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Agregar()">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<script>

    Agregar = () => {
        console.log("Inside")
        let formAddClient = document.getElementById("formAddClient");
        formAddClient.submit();
    }


</script>